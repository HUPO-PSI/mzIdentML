<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by Martin Eisenacher, Medizinisches Proteom-Center, Ruhr-Universität Bochum, for PSI-PI, HUPO -->
<!-- http://code.google.com/p/psi-pi/source/browse/#svn/trunk/cv -->

<xsl:stylesheet version="2.0"
		 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
     xmlns:xs="http://www.w3.org/2001/XMLSchema" 
     xmlns:fn="http://www.w3.org/2005/xpath-functions" 
     xmlns:umod="http://www.unimod.org/xmlns/schema/unimod_2"
     exclude-result-prefixes="xs fn xsl">

<xsl:output method="text" encoding="utf-8" indent="yes" omit-xml-declaration="yes"/>

<xsl:template match="/">format-version: 1.2
date: <xsl:for-each select="/*/umod:modifications/umod:mod">
<xsl:sort select="@date_time_modified" order="descending"/>
<xsl:if test="position() = 1"><xsl:value-of select="substring(@date_time_modified,1,4)"/>:<xsl:value-of select="substring(@date_time_modified,6,2)"/>:<xsl:value-of select="substring(@date_time_modified,9,2)"/><xsl:text> </xsl:text><xsl:value-of select="substring(@date_time_modified,12,2)"/>:<xsl:value-of select="substring(@date_time_modified,15,2)"/></xsl:if>
<!-- xsl:if test="position() = 1"><xsl:value-of select="substring(@date_time_modified,1,string-length(@date_time_modified-3))"/></xsl:if -->
</xsl:for-each>
<!-- xsl:value-of select="fn:format-date(fn:current-date(),'[D01]:[M01]:[Y0001]')"/><xsl:text> </xsl:text><xsl:value-of select="format-time(fn:current-time(),'[H01]:[m01]')"/ -->
saved-by: psi-pi_team
default-namespace: UNIMOD

[Term]
id: UNIMOD:0
name: unimod root node
def: "The root node of the unimod modifications ontology." [UNIMOD:0]

<xsl:for-each select="//umod:modifications/umod:mod"><xsl:sort select="@record_id" data-type="number" order="ascending"/>[Term]
id: UNIMOD:<xsl:value-of select="@record_id"/>
name: <xsl:value-of select="@title"/>
def: "<xsl:value-of select="upper-case(substring(@full_name,1,1))"/><xsl:value-of select="substring(normalize-space(replace(@full_name,'α','alpha')),2)"/>." [<xsl:for-each select="umod:xref"><xsl:if test="not (compare(umod:source,'PubMed PMID'))">PMID:<xsl:if test= "not(string(number(umod:text))='NaN')"><xsl:value-of select="umod:text"/></xsl:if><xsl:if test= "string(number(umod:text))='NaN'"><xsl:value-of select="umod:url"/></xsl:if><xsl:text>, </xsl:text></xsl:if><xsl:if test="not (compare(umod:source,'FindMod'))">FindMod:<xsl:value-of select="umod:text"/><xsl:text>, </xsl:text></xsl:if><xsl:if test="not (compare(umod:source,'RESID'))">RESID:<xsl:value-of select="umod:text"/><xsl:text>, </xsl:text></xsl:if><xsl:if test="not (compare(umod:source,'Misc. URL'))">URL:<xsl:if test="umod:url"><xsl:value-of select="replace(umod:url,':','\\:')"/></xsl:if><xsl:if test="not(string(umod:url))"><xsl:value-of select="replace(umod:text,':','\\:')"/></xsl:if><xsl:text>, </xsl:text></xsl:if></xsl:for-each>UNIMODURL:http\://www.unimod.org/modifications_view.php?editid1=<xsl:value-of select="@record_id"/>]<xsl:if test="umod:misc_notes"><xsl:text>&#xa;</xsl:text>comment: <xsl:value-of select="upper-case(substring(normalize-space(replace(replace(umod:misc_notes,'\\n',' '),'\\r',' ')),1,1))"/><xsl:value-of select="substring(normalize-space(replace(replace(replace(umod:misc_notes,'in preparation','; in preparation'),'\\n',' '),'\\r',' ')),2)"/><xsl:if test="not(ends-with(umod:misc_notes,'.'))">.</xsl:if></xsl:if>
<xsl:if test="umod:alt_name"><xsl:text>&#xa;</xsl:text>synonym: "<xsl:value-of select="umod:alt_name"/>" []</xsl:if>
xref: record_id "<xsl:value-of select="@record_id"/>"
xref: delta_mono_mass "<xsl:value-of select="umod:delta/@mono_mass"/>"
xref: delta_avge_mass "<xsl:value-of select="umod:delta/@avge_mass"/>"
xref: delta_composition "<xsl:value-of select="umod:delta/@composition"/>"
xref: username_of_poster "<xsl:value-of select="@username_of_poster"/>"
xref: group_of_poster "<xsl:value-of select="@group_of_poster"/>"
xref: date_time_posted "<xsl:value-of select="@date_time_posted"/>"
xref: date_time_modified "<xsl:value-of select="@date_time_modified"/>"
xref: approved "<xsl:value-of select="@approved"/>"<xsl:for-each select="umod:specificity"><xsl:sort select="@spec_group" data-type="number" order="ascending"/>
xref: spec_<xsl:value-of select="@spec_group"/>_group "<xsl:value-of select="@spec_group"/>"
xref: spec_<xsl:value-of select="@spec_group"/>_hidden "<xsl:value-of select="@hidden"/>"
xref: spec_<xsl:value-of select="@spec_group"/>_site "<xsl:value-of select="@site"/>"
xref: spec_<xsl:value-of select="@spec_group"/>_position "<xsl:value-of select="@position"/>"
xref: spec_<xsl:value-of select="@spec_group"/>_classification "<xsl:value-of select="@classification"/>"<xsl:for-each select="umod:misc_notes">
xref: spec_<xsl:value-of select="../@spec_group"/>_misc_notes "<xsl:value-of select="normalize-space(.)"/>"</xsl:for-each><xsl:for-each select="umod:NeutralLoss">
xref: spec_<xsl:value-of select="../@spec_group"/>_neutral_loss_<xsl:value-of select="ceiling(@mono_mass)" />_mono_mass "<xsl:value-of select="@mono_mass"/>"
xref: spec_<xsl:value-of select="../@spec_group"/>_neutral_loss_<xsl:value-of select="ceiling(@mono_mass)"/>_avge_mass "<xsl:value-of select="@avge_mass"/>"
xref: spec_<xsl:value-of select="../@spec_group"/>_neutral_loss_<xsl:value-of select="ceiling(@mono_mass)"/>_flag "<xsl:value-of select="@flag"/>"
xref: spec_<xsl:value-of select="../@spec_group"/>_neutral_loss_<xsl:value-of select="ceiling(@mono_mass)"/>_composition "<xsl:value-of select="@composition"/>"</xsl:for-each></xsl:for-each>
is_a: UNIMOD:0 ! unimod root node

<!-- xsl:if test="compare(umod:source,'Misc. URL')"> result contra-intuitive: like NOT ->
<xsl:if test="compare(umod:source,'Book')">  result contra-intuitive: like NOT ->
<xsl:if test="compare(umod:source,'Journal')">  result contra-intuitive: like NOT ->
<xsl:if test="compare(umod:source,'Other')">  result contra-intuitive: like NOT -->
</xsl:for-each>
</xsl:template>

</xsl:stylesheet>
